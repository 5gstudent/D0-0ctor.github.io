<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo踩坑记（centos7篇）]]></title>
    <url>%2F2019%2F10%2F09%2Fhexo%E8%B8%A9%E5%9D%91%E8%AE%B0%EF%BC%88centos7%E7%AF%87%EF%BC%89%2F</url>
    <content type="text"><![CDATA[hexo踩坑记（centos7篇）听说hexo是一个很好用的静态博客 因为静态不像动态那样会出现很多安全问题，占用的系统资源很小，而且可以托管到github上，虽说托管到github上后速度有点慢，托管到coding上好像会好点，反正就我自己当笔记用，⑧是问题。网上教程很多，也很杂，有的坑别人没踩自己踩了所以记录一下 进入正题 前提安装 git node-js git很简单，直接用yum安装，可以导入一下key这样就不用每次都输入账户密码了 npm和node-js都是一起的，安装其中一个另一个也就有了，直接yum安装npm后会因为版本太低在安装hexo时报错，我问了别人好像没我这种问题，可以直接装了试试，我是编译安装node-js的最新版本，花了好久 hexo安装和启动 npm install hexo-cli -g安装hexo hexo init blog到一个你常用的目录下初始化，blog可以改为你喜欢的文件夹名字，结束后可以发现当前文件夹下的blog文件夹 npm install这一步要进入blog文件夹（据说不需要这一步也可以） hexo s这样hexo服务就在本地的4000端口开启了，只能通过本地访问，那么问题来了，vps没有图形化怎么确定是否能够访问？第一个想到了curl，真tm为我的机智点赞，然鹅，ctrl+z出来后进行curl http://localhost:4000，太棒了！什么回显都没有，然后我被卡了半天，一直以为是环境有啥问题，或者配置有啥问题，大晚上的左思右想，就这几步操作不会有啥问题啊，人家不都一把梭嘛。直到第二天，我开了一个ssh窗口启动hexo，再开了一个ssh的窗口用curl…wdnmd有回显了，难道这就是玄学？是我不配，要不是没有技术，谁又愿意当一个菜鸡 然后就顺利多了 关联github 首先在github上创建名为xxx.github.io的项目，xxx为自己的github用户名 在blog文件夹下编辑_config.yml配置文件，将其中的type设置为git,xxx为自己的用户名 1234deploy: type: git repository:https://github.com/xxx/xxx.github.io.git branch: master 运行：npm install hexo-deployer-git -save（我运行的时候报错-save不能用，就去掉了，后续也没有出现问题） 运行：hexo g（本地生成静态文件） 运行：hexo d（将本地静态文件推送至Github） 绑定域名我的国内vps还没有备案，这一步以后再说 更新文章 hexo new “文章名”会在source-&gt;_posts文件下生成一个md文件 以md规则编辑该文件 修改起始字段 编辑正文内容 hexo clean删除本地静态文件（可以不执行） hexo g生成本地静态文件（Public目录） hexo d将本地静态文件推送至github（hexo d） 这边会提醒输入账户密码，也可以采用不输入账户密码的方法，更改_config.yml中的deploy即可 美化我参照了网上的一些文章进行的美化，直男审美，所以网站看起来比较朴素 完成了，舒服了 我参考的文章https://www.jianshu.com/p/60f5c84aa5a8https://thief.one/2017/03/03/Hexo搭建博客教程/]]></content>
      <tags>
        <tag>踩坑记</tag>
      </tags>
  </entry>
</search>
